{"dependencies":[],"generated":{"js":"module.exports = `\nuniform float u_delta;\nuniform vec2 u_resolution;\nuniform vec2 u_inv_resolution;\n\nvoid main() {\n\n  vec2 uv = gl_FragCoord.xy * u_inv_resolution.xy;\n\n  vec3 value = texture2D(textureVelocityDensity, uv).xyz;\n  value = fract(value + vec3(0.01, 0.01, 0.01));\n\n  //Find neighboring velocities:\n  vec2 t = gl_FragCoord.xy;\n  vec2 n = texture2D(textureVelocityDensity, vec2(t.x, t.y + 1.0) * u_inv_resolution).xy;\n  vec2 s = texture2D(textureVelocityDensity, vec2(t.x, t.y - 1.0) * u_inv_resolution).xy;\n  vec2 e = texture2D(textureVelocityDensity, vec2(t.x + 1.0, t.y) * u_inv_resolution).xy; \n  vec2 w = texture2D(textureVelocityDensity, vec2(t.x - 1.0, t.y) * u_inv_resolution).xy; \n\n  gl_FragColor = vec4(value, 1.0);\n\n}\n`"},"hash":"367e9abfbd4326d72d07944aa437394e","cacheData":{}}